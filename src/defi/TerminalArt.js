// ASCII Art Collection for koHLabs Terminal
export const ASCII_ART = {
  kohlabs_logo: `
    ‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïó  ‚ñà‚ñà‚ïó‚ñà‚ñà‚ïó      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
    ‚ñà‚ñà‚ïë ‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ñà‚ñà‚ïî‚ïê‚ïê‚ïê‚ïê‚ïù
    ‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó
    ‚ñà‚ñà‚ïî‚ïê‚ñà‚ñà‚ïó ‚ñà‚ñà‚ïë   ‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïë     ‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïë‚ñà‚ñà‚ïî‚ïê‚ïê‚ñà‚ñà‚ïó‚ïö‚ïê‚ïê‚ïê‚ïê‚ñà‚ñà‚ïë
    ‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïó‚ïö‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïó‚ñà‚ñà‚ïë  ‚ñà‚ñà‚ïë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïî‚ïù‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ïë
    ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù‚ïö‚ïê‚ïù  ‚ïö‚ïê‚ïù‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù`,

  dna_helix: `
         üß¨ DNA SEQUENCING COMPLETE üß¨
           A‚ïê‚ïê‚ïêT     G‚ïê‚ïê‚ïêC
          ‚ï±     ‚ï≤   ‚ï±     ‚ï≤
         T       A‚ïêC       G
          ‚ï≤     ‚ï±   ‚ï≤     ‚ï±
           G‚ïê‚ïê‚ïêC     A‚ïê‚ïê‚ïêT
          ‚ï±     ‚ï≤   ‚ï±     ‚ï≤
         C       G‚ïêT       A
          ‚ï≤     ‚ï±   ‚ï≤     ‚ï±
           A‚ïê‚ïê‚ïêT     G‚ïê‚ïê‚ïêC`,

  beaker_success: `
              üß™ EXPERIMENT SUCCESS üß™
                     ‚à©‚îÄ‚îÄ‚îÄ‚à©
                    ‚îÇ ‚ñë‚ñë‚ñë ‚îÇ  ‚Üê Success Bubbles
                    ‚îÇ ‚ô¶‚ô¶‚ô¶ ‚îÇ  ‚Üê Diamond Compound
                    ‚îÇ ‚ñà‚ñà‚ñà ‚îÇ  ‚Üê Rocket Fuel
                    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                   üî• IGNITION üî•`,

  molecule_structure: `
          üî¨ MOLECULAR STRUCTURE ANALYSIS üî¨
               
                    H
                    ‚îÇ
            H‚îÄ‚îÄ‚îÄC‚îÄ‚îÄ‚îÄC‚îÄ‚îÄ‚îÄH    ‚Üê Prosperity Chain
                ‚îÇ   ‚îÇ
                H   OH       ‚Üê Moon Catalyst
                    
        Formula: C‚ÇÇH‚ÇÜO (Ethereum + Hodl + Oxygen)`,

  rocket_launch: `
               üöÄ LAUNCHING TO THE MOON üöÄ
                        ‚ï±‚îÇ‚ï≤
                       ‚ï± ‚îÇ ‚ï≤
                      ‚ï±  ‚îÇ  ‚ï≤
                     ‚ï±‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚ï≤
                    ‚îÇ KOHLABS ‚îÇ
                    ‚îÇ  ‚ñà‚ñà‚ñà‚ñà   ‚îÇ
                    ‚îÇ  ‚ñà‚ñà‚ñà‚ñà   ‚îÇ
                    ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                   üî•üî•üî•üî•üî•üî•üî•
                 üíéüíéüíéüíéüíéüíéüíéüíéüíé`,

  periodic_table: `
         üß™ KOHLABS PERIODIC TABLE OF DEFI üß™
    ‚îå‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îê
    ‚îÇH ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇHe‚îÇ  ‚Üê Noble Holders
    ‚îÇ1 ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ2 ‚îÇ
    ‚îú‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚î§
    ‚îÇLi‚îÇBe‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ
    ‚îÇ3 ‚îÇ4 ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ
    ‚îú‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚îº‚îÄ‚îÄ‚î§
    ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇKo‚îÇH ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚Üê KOHLABS
    ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ42‚îÇ1 ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ  ‚îÇ
    ‚îî‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îò`,

  success_celebration: `
        üéâ TRANSACTION SUCCESSFUL üéâ
           ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
           ‚ïë  üíé DIAMOND HANDS üíé  ‚ïë
           ‚ïë     ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó     ‚ïë
           ‚ïë     ‚ïë SUCCESS!! ‚ïë     ‚ïë
           ‚ïë     ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù     ‚ïë
           ‚ïë  üöÄ TO THE MOON üöÄ   ‚ïë
           ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
              ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê`,

  lab_equipment: `
       ‚öóÔ∏è KOHLABS EQUIPMENT STATUS ‚öóÔ∏è
      
      üß™ Beakers: ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 100% Ready
      üî¨ Microscope: ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà Analyzing
      ‚ö° Generator: ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà Full Power  
      üíé Diamond Press: ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà Active
      üöÄ Launch Pad: ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà Prepared
      üì° Blockchain Link: ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà Synced`,

  warning_sign: `
         ‚ö†Ô∏è LABORATORY SAFETY WARNING ‚ö†Ô∏è
         ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
         ‚ïë  üß§ WEAR PROTECTIVE GLOVES    ‚ïë
         ‚ïë  ü•Ω SAFETY GOGGLES REQUIRED   ‚ïë
         ‚ïë  üî• HIGHLY VOLATILE TOKENS    ‚ïë
         ‚ïë  üíé DIAMOND HANDS ONLY       ‚ïë
         ‚ïë  üö® FOMO LEVELS CRITICAL     ‚ïë
         ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù`,

  loading_dna: `
         üß¨ DNA SEQUENCE LOADING üß¨
           
           A-T-G-C-${['‚†ã','‚†ô','‚†π','‚†∏','‚†º','‚†¥','‚†¶','‚†ß','‚†á','‚†è'][Math.floor(Math.random()*10)]}-A-T-G-C
           | | | |   | | | |
           T-A-C-G-${['‚†ã','‚†ô','‚†π','‚†∏','‚†º','‚†¥','‚†¶','‚†ß','‚†á','‚†è'][Math.floor(Math.random()*10)]}-T-A-C-G
           
         Genetic Algorithm: ${Math.floor(Math.random()*100)}%`
}

// Fun command responses
export const MAD_SCIENTIST_RESPONSES = {
  success: [
    "üß™ EUREKA! The experiment was a complete success!",
    "‚ö° BREAKTHROUGH! Molecular bonds formed perfectly!",
    "üî¨ HYPOTHESIS CONFIRMED! Results exceeded expectations!",
    "üíé CRYSTALLIZATION COMPLETE! Diamond structure achieved!",
    "üöÄ IGNITION SEQUENCE SUCCESSFUL! We have liftoff!"
  ],
  
  error: [
    "üí• CHEMICAL REACTION FAILED! Adjusting molecular formula...",
    "‚ö†Ô∏è EXPERIMENT UNSTABLE! Initiating safety protocols...",
    "üß™ MIXTURE REJECTED! Incompatible compounds detected...",
    "üî• COMBUSTION ERROR! Cooling chambers activated...",
    "‚ö° CIRCUIT OVERLOAD! Rerouting power through backup systems..."
  ],
  
  processing: [
    "üß¨ Sequencing genetic code...",
    "‚öóÔ∏è Mixing volatile compounds...",
    "üî¨ Analyzing molecular structure...", 
    "üíé Crystallizing diamond lattice...",
    "üöÄ Calculating orbital trajectory..."
  ]
}

// Random lab facts that appear during idle time
export const LAB_FACTS = [
  "üí° Did you know? The koH chemical formula creates perfectly stable diamond hands!",
  "üß¨ Fun fact: DeFi protocols have 42% more molecular stability than traditional finance!",
  "‚öóÔ∏è Laboratory note: Mixing HODL with WAGMI creates an explosive moon compound!",
  "üî¨ Scientific discovery: Paper hands evaporate at exactly 69¬∞C under FUD pressure!",
  "üíé Research shows: Diamond hands have a crystalline structure identical to actual diamonds!",
  "üöÄ Physics fact: Moon missions require exactly 1.21 gigawatts of diamond hand energy!",
  "üß™ Chemistry lesson: The molecular weight of FOMO is inversely related to portfolio size!"
]

// Easter egg ASCII animations
export const ASCII_ANIMATIONS = {
  matrix_kohlabs: () => {
    const frames = [
      "‚ñà ‚ñà ‚ñà koH ‚ñà ‚ñà ‚ñà",
      "‚ñà ‚ñà koH Labs ‚ñà ‚ñà", 
      "‚ñà koHLabs DeFi ‚ñà",
      "koHLabs Terminal",
      "‚ñà koHLabs DeFi ‚ñà",
      "‚ñà ‚ñà koH Labs ‚ñà ‚ñà",
      "‚ñà ‚ñà ‚ñà koH ‚ñà ‚ñà ‚ñà"
    ]
    return frames[Math.floor(Math.random() * frames.length)]
  },
  
  dancing_molecules: () => {
    const molecules = ["‚öõÔ∏è", "üß¨", "‚öóÔ∏è", "üî¨", "üíé", "‚ö°"]
    return molecules.map(m => 
      Math.random() > 0.5 ? m : `<${m}>`
    ).join(" ")
  },
  
  bubbling_beaker: () => {
    const bubbles = ["‚óã", "‚óØ", "‚óè", "‚óê", "‚óë", "‚óí", "‚óì"]
    const bubble = bubbles[Math.floor(Math.random() * bubbles.length)]
    return `üß™${bubble}${bubble}${bubble} *BUBBLE BUBBLE*`
  }
}

// Sound effect text representations
export const SOUND_EFFECTS = {
  success: ["*DING!*", "*CHIME!*", "*SPARKLE!*"],
  error: ["*BZZT!*", "*FIZZLE*", "*POP!*"],  
  processing: ["*WHIRR*", "*HUM*", "*BUZZ*"],
  explosion: ["*BOOM!*", "*BANG!*", "*KAPOW!*"]
}

export default { ASCII_ART, MAD_SCIENTIST_RESPONSES, LAB_FACTS, ASCII_ANIMATIONS, SOUND_EFFECTS }